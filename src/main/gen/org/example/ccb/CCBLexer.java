// Generated from C:/java-learn/antlr-ccb/src/main/java/org/example/ccb\CCB.g4 by ANTLR 4.10.1

package org.example.ccb;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CCBLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.10.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		EQ=1, NEQ=2, NOT=3, OPAR=4, CPAR=5, OBRACE=6, CBRACE=7, OSRACE=8, CSRACE=9, 
		TRUE=10, FALSE=11, NIL=12, IF=13, THEN=14, ELSE=15, ID=16, INT=17, FLOAT=18, 
		STRING=19, COMMENT=20, SPACE=21, OTHER=22;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"EQ", "NEQ", "NOT", "OPAR", "CPAR", "OBRACE", "CBRACE", "OSRACE", "CSRACE", 
			"TRUE", "FALSE", "NIL", "IF", "THEN", "ELSE", "ID", "INT", "FLOAT", "STRING", 
			"COMMENT", "SPACE", "OTHER"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'='", "'!='", "'!'", "'('", "')'", "'{'", "'}'", "'['", "']'", 
			null, null, "'nil'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "EQ", "NEQ", "NOT", "OPAR", "CPAR", "OBRACE", "CBRACE", "OSRACE", 
			"CSRACE", "TRUE", "FALSE", "NIL", "IF", "THEN", "ELSE", "ID", "INT", 
			"FLOAT", "STRING", "COMMENT", "SPACE", "OTHER"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public CCBLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CCB.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0016\u00ae\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0004"+
		"\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0007"+
		"\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001"+
		"\t\u0001\t\u0001\t\u0003\tI\b\t\u0001\n\u0001\n\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0003\nU\b\n\u0001\u000b\u0001"+
		"\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\f\u0001\f\u0003\f"+
		"_\b\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r"+
		"\u0003\ri\b\r\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e"+
		"\u0001\u000e\u0001\u000e\u0001\u000e\u0003\u000es\b\u000e\u0001\u000f"+
		"\u0001\u000f\u0005\u000fw\b\u000f\n\u000f\f\u000fz\t\u000f\u0001\u0010"+
		"\u0004\u0010}\b\u0010\u000b\u0010\f\u0010~\u0001\u0011\u0004\u0011\u0082"+
		"\b\u0011\u000b\u0011\f\u0011\u0083\u0001\u0011\u0001\u0011\u0005\u0011"+
		"\u0088\b\u0011\n\u0011\f\u0011\u008b\t\u0011\u0001\u0011\u0001\u0011\u0004"+
		"\u0011\u008f\b\u0011\u000b\u0011\f\u0011\u0090\u0003\u0011\u0093\b\u0011"+
		"\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0005\u0012\u0099\b\u0012"+
		"\n\u0012\f\u0012\u009c\t\u0012\u0001\u0012\u0001\u0012\u0001\u0013\u0001"+
		"\u0013\u0005\u0013\u00a2\b\u0013\n\u0013\f\u0013\u00a5\t\u0013\u0001\u0013"+
		"\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0015"+
		"\u0001\u0015\u0000\u0000\u0016\u0001\u0001\u0003\u0002\u0005\u0003\u0007"+
		"\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b"+
		"\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013"+
		"\'\u0014)\u0015+\u0016\u0001\u0000\u0006\u0003\u0000AZ__az\u0004\u0000"+
		"09AZ__az\u0001\u000009\u0003\u0000\n\n\r\r\"\"\u0002\u0000\n\n\r\r\u0003"+
		"\u0000\t\n\r\r  \u00bb\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003"+
		"\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007"+
		"\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001"+
		"\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000"+
		"\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000"+
		"\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000"+
		"\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000"+
		"\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000"+
		"\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000"+
		"\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000"+
		")\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0001-\u0001"+
		"\u0000\u0000\u0000\u0003/\u0001\u0000\u0000\u0000\u00052\u0001\u0000\u0000"+
		"\u0000\u00074\u0001\u0000\u0000\u0000\t6\u0001\u0000\u0000\u0000\u000b"+
		"8\u0001\u0000\u0000\u0000\r:\u0001\u0000\u0000\u0000\u000f<\u0001\u0000"+
		"\u0000\u0000\u0011>\u0001\u0000\u0000\u0000\u0013H\u0001\u0000\u0000\u0000"+
		"\u0015T\u0001\u0000\u0000\u0000\u0017V\u0001\u0000\u0000\u0000\u0019^"+
		"\u0001\u0000\u0000\u0000\u001bh\u0001\u0000\u0000\u0000\u001dr\u0001\u0000"+
		"\u0000\u0000\u001ft\u0001\u0000\u0000\u0000!|\u0001\u0000\u0000\u0000"+
		"#\u0092\u0001\u0000\u0000\u0000%\u0094\u0001\u0000\u0000\u0000\'\u009f"+
		"\u0001\u0000\u0000\u0000)\u00a8\u0001\u0000\u0000\u0000+\u00ac\u0001\u0000"+
		"\u0000\u0000-.\u0005=\u0000\u0000.\u0002\u0001\u0000\u0000\u0000/0\u0005"+
		"!\u0000\u000001\u0005=\u0000\u00001\u0004\u0001\u0000\u0000\u000023\u0005"+
		"!\u0000\u00003\u0006\u0001\u0000\u0000\u000045\u0005(\u0000\u00005\b\u0001"+
		"\u0000\u0000\u000067\u0005)\u0000\u00007\n\u0001\u0000\u0000\u000089\u0005"+
		"{\u0000\u00009\f\u0001\u0000\u0000\u0000:;\u0005}\u0000\u0000;\u000e\u0001"+
		"\u0000\u0000\u0000<=\u0005[\u0000\u0000=\u0010\u0001\u0000\u0000\u0000"+
		">?\u0005]\u0000\u0000?\u0012\u0001\u0000\u0000\u0000@A\u0005t\u0000\u0000"+
		"AB\u0005r\u0000\u0000BC\u0005u\u0000\u0000CI\u0005e\u0000\u0000DE\u0005"+
		"T\u0000\u0000EF\u0005R\u0000\u0000FG\u0005U\u0000\u0000GI\u0005E\u0000"+
		"\u0000H@\u0001\u0000\u0000\u0000HD\u0001\u0000\u0000\u0000I\u0014\u0001"+
		"\u0000\u0000\u0000JK\u0005f\u0000\u0000KL\u0005a\u0000\u0000LM\u0005l"+
		"\u0000\u0000MN\u0005s\u0000\u0000NU\u0005e\u0000\u0000OP\u0005F\u0000"+
		"\u0000PQ\u0005A\u0000\u0000QR\u0005L\u0000\u0000RS\u0005S\u0000\u0000"+
		"SU\u0005E\u0000\u0000TJ\u0001\u0000\u0000\u0000TO\u0001\u0000\u0000\u0000"+
		"U\u0016\u0001\u0000\u0000\u0000VW\u0005n\u0000\u0000WX\u0005i\u0000\u0000"+
		"XY\u0005l\u0000\u0000Y\u0018\u0001\u0000\u0000\u0000Z[\u0005i\u0000\u0000"+
		"[_\u0005f\u0000\u0000\\]\u0005I\u0000\u0000]_\u0005F\u0000\u0000^Z\u0001"+
		"\u0000\u0000\u0000^\\\u0001\u0000\u0000\u0000_\u001a\u0001\u0000\u0000"+
		"\u0000`a\u0005t\u0000\u0000ab\u0005h\u0000\u0000bc\u0005e\u0000\u0000"+
		"ci\u0005n\u0000\u0000de\u0005T\u0000\u0000ef\u0005H\u0000\u0000fg\u0005"+
		"E\u0000\u0000gi\u0005N\u0000\u0000h`\u0001\u0000\u0000\u0000hd\u0001\u0000"+
		"\u0000\u0000i\u001c\u0001\u0000\u0000\u0000jk\u0005e\u0000\u0000kl\u0005"+
		"l\u0000\u0000lm\u0005s\u0000\u0000ms\u0005e\u0000\u0000no\u0005E\u0000"+
		"\u0000op\u0005L\u0000\u0000pq\u0005S\u0000\u0000qs\u0005E\u0000\u0000"+
		"rj\u0001\u0000\u0000\u0000rn\u0001\u0000\u0000\u0000s\u001e\u0001\u0000"+
		"\u0000\u0000tx\u0007\u0000\u0000\u0000uw\u0007\u0001\u0000\u0000vu\u0001"+
		"\u0000\u0000\u0000wz\u0001\u0000\u0000\u0000xv\u0001\u0000\u0000\u0000"+
		"xy\u0001\u0000\u0000\u0000y \u0001\u0000\u0000\u0000zx\u0001\u0000\u0000"+
		"\u0000{}\u0007\u0002\u0000\u0000|{\u0001\u0000\u0000\u0000}~\u0001\u0000"+
		"\u0000\u0000~|\u0001\u0000\u0000\u0000~\u007f\u0001\u0000\u0000\u0000"+
		"\u007f\"\u0001\u0000\u0000\u0000\u0080\u0082\u0007\u0002\u0000\u0000\u0081"+
		"\u0080\u0001\u0000\u0000\u0000\u0082\u0083\u0001\u0000\u0000\u0000\u0083"+
		"\u0081\u0001\u0000\u0000\u0000\u0083\u0084\u0001\u0000\u0000\u0000\u0084"+
		"\u0085\u0001\u0000\u0000\u0000\u0085\u0089\u0005.\u0000\u0000\u0086\u0088"+
		"\u0007\u0002\u0000\u0000\u0087\u0086\u0001\u0000\u0000\u0000\u0088\u008b"+
		"\u0001\u0000\u0000\u0000\u0089\u0087\u0001\u0000\u0000\u0000\u0089\u008a"+
		"\u0001\u0000\u0000\u0000\u008a\u0093\u0001\u0000\u0000\u0000\u008b\u0089"+
		"\u0001\u0000\u0000\u0000\u008c\u008e\u0005.\u0000\u0000\u008d\u008f\u0007"+
		"\u0002\u0000\u0000\u008e\u008d\u0001\u0000\u0000\u0000\u008f\u0090\u0001"+
		"\u0000\u0000\u0000\u0090\u008e\u0001\u0000\u0000\u0000\u0090\u0091\u0001"+
		"\u0000\u0000\u0000\u0091\u0093\u0001\u0000\u0000\u0000\u0092\u0081\u0001"+
		"\u0000\u0000\u0000\u0092\u008c\u0001\u0000\u0000\u0000\u0093$\u0001\u0000"+
		"\u0000\u0000\u0094\u009a\u0005\"\u0000\u0000\u0095\u0099\b\u0003\u0000"+
		"\u0000\u0096\u0097\u0005\"\u0000\u0000\u0097\u0099\u0005\"\u0000\u0000"+
		"\u0098\u0095\u0001\u0000\u0000\u0000\u0098\u0096\u0001\u0000\u0000\u0000"+
		"\u0099\u009c\u0001\u0000\u0000\u0000\u009a\u0098\u0001\u0000\u0000\u0000"+
		"\u009a\u009b\u0001\u0000\u0000\u0000\u009b\u009d\u0001\u0000\u0000\u0000"+
		"\u009c\u009a\u0001\u0000\u0000\u0000\u009d\u009e\u0005\"\u0000\u0000\u009e"+
		"&\u0001\u0000\u0000\u0000\u009f\u00a3\u0005#\u0000\u0000\u00a0\u00a2\b"+
		"\u0004\u0000\u0000\u00a1\u00a0\u0001\u0000\u0000\u0000\u00a2\u00a5\u0001"+
		"\u0000\u0000\u0000\u00a3\u00a1\u0001\u0000\u0000\u0000\u00a3\u00a4\u0001"+
		"\u0000\u0000\u0000\u00a4\u00a6\u0001\u0000\u0000\u0000\u00a5\u00a3\u0001"+
		"\u0000\u0000\u0000\u00a6\u00a7\u0006\u0013\u0000\u0000\u00a7(\u0001\u0000"+
		"\u0000\u0000\u00a8\u00a9\u0007\u0005\u0000\u0000\u00a9\u00aa\u0001\u0000"+
		"\u0000\u0000\u00aa\u00ab\u0006\u0014\u0000\u0000\u00ab*\u0001\u0000\u0000"+
		"\u0000\u00ac\u00ad\t\u0000\u0000\u0000\u00ad,\u0001\u0000\u0000\u0000"+
		"\u000f\u0000HT^hrx~\u0083\u0089\u0090\u0092\u0098\u009a\u00a3\u0001\u0006"+
		"\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}